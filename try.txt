DECLARE moduleDeclaration MODULE ID SEMICOL moduleDeclarations ε moduleDeclarations program DEF module MODULE ID ENDDEF TAKES INPUT SQBO ID input_plist COLON ARRAY dataType SQBO NUM index range_arrays RANGEOP NUM index SQBC OF REAL type COMMA N1 ID COLON INTEGER dataType ε N1 SQBC SEMICOL RETURNS ret SQBO ID output_plist COLON REAL type ε N2 SQBC SEMICOL START moduleDef DECLARE declareStmt ID idList ε N3 COLON INTEGER dataType SEMICOL statement statements DECLARE declareStmt ID idList ε N3 COLON BOOLEAN dataType SEMICOL statement statements ID assignmentStmt ASSIGNOP lvalueIDStmt RNUM var_id_num factor term ε N5 arithmeticExpr ε N4 AnyTerm ε N8 arithmeticOrBooleanExpr ε N7 expression SEMICOL whichStmt simpleStmt statement statements FOR iterativeStmt BO ID IN NUM range RANGEOP NUM BC START ID assignmentStmt ASSIGNOP lvalueIDStmt ID var_id_num ε whichId factor term ε N5 arithmeticExpr ε N4 AnyTerm LE relationalOp N8 ID var_id_num ε whichId factor term ε N5 arithmeticExpr ε N4 arithmeticOrBooleanExpr ε N7 expression SEMICOL whichStmt simpleStmt statement statements SWITCH conditionalStmt BO ID BC START CASE caseStmts TRUE value COLON PRINT ioStmt BO ID var_id_num SQBO whichId ID index SQBC var BC SEMICOL statement statements ID assignmentStmt ASSIGNOP lvalueIDStmt ID var_id_num ε whichId factor term ε N5 arithmeticExpr PLUS op1 N4 ID var_id_num SQBO whichId ID index SQBC factor term ε N5 ε N4 AnyTerm ε N8 arithmeticOrBooleanExpr ε N7 expression SEMICOL whichStmt simpleStmt statement statements ε statements BREAK SEMICOL CASE N9 FALSE value COLON PRINT ioStmt BO ID var_id_num ε whichId var BC SEMICOL statement statements PRINT ioStmt BO ID var_id_num ε whichId var BC SEMICOL statement statements ε statements BREAK SEMICOL ε N9 ε default END statement statements ε statements END statement statements PRINT ioStmt BO ID var_id_num ε whichId var BC SEMICOL statement statements ε statements END otherModules ε otherModules DRIVERDEF driverModule DRIVER PROGRAM DRIVERENDDEF START moduleDef DECLARE declareStmt ID idList ε N3 COLON ARRAY dataType SQBO NUM index range_arrays RANGEOP NUM index SQBC OF REAL type SEMICOL statement statements DECLARE declareStmt ID idList ε N3 COLON INTEGER dataType SEMICOL statement statements DECLARE declareStmt ID idList ε N3 COLON REAL dataType SEMICOL statement statements GET_VALUE ioStmt BO ID BC SEMICOL statement statements ε optional moduleReuseStmt USE MODULE ID WITH PARAMETERS ID idList COMMA N3 ID ε N3 SEMICOL simpleStmt statement statements SQBO optional ID idList ε N3 SQBC ASSIGNOP moduleReuseStmt USE MODULE ID WITH PARAMETERS ID idList COMMA N3 ID ε N3 SEMICOL simpleStmt statement statements PRINT ioStmt BO ID var_id_num ε whichId var BC SEMICOL statement statements ε statements END DEF module MODULE ID ENDDEF TAKES INPUT SQBO ID input_plist COLON ARRAY dataType SQBO NUM index range_arrays RANGEOP NUM index SQBC OF REAL type COMMA N1 ID COLON INTEGER dataType ε N1 SQBC SEMICOL ε ret START moduleDef DECLARE declareStmt ID idList ε N3 COLON REAL dataType SEMICOL statement statements DECLARE declareStmt ID idList ε N3 COLON INTEGER dataType SEMICOL statement statements ID assignmentStmt ASSIGNOP lvalueIDStmt NUM var_id_num factor term ε N5 arithmeticExpr ε N4 AnyTerm ε N8 arithmeticOrBooleanExpr ε N7 expression SEMICOL whichStmt simpleStmt statement statements WHILE iterativeStmt BO ID var_id_num ε whichId factor term ε N5 arithmeticExpr ε N4 AnyTerm LE relationalOp N8 ID var_id_num ε whichId factor term ε N5 arithmeticExpr ε N4 arithmeticOrBooleanExpr ε N7 BC START GET_VALUE ioStmt BO ID BC SEMICOL statement statements ID assignmentStmt SQBO lvalueARRStmt ID index SQBC ASSIGNOP ID var_id_num ε whichId factor term ε N5 arithmeticExpr ε N4 AnyTerm ε N8 arithmeticOrBooleanExpr ε N7 expression SEMICOL whichStmt simpleStmt statement statements ID assignmentStmt ASSIGNOP lvalueIDStmt ID var_id_num ε whichId factor term ε N5 arithmeticExpr PLUS op1 N4 NUM var_id_num factor term ε N5 ε N4 AnyTerm ε N8 arithmeticOrBooleanExpr ε N7 expression SEMICOL whichStmt simpleStmt statement statements ε statements END statement statements ε statements END otherModules ε 