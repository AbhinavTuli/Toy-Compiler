1 - Consider both dynamic and static array!
2 - Tell Symbol Table that what is input
3 - no of inputs and outputs update!




<<module f1>>
takes input[a: array[g1..g2] of integer, b:array[10..30] of integer, c:real];
returns [m:boolean, n:integer];
start
	declare x,y, p: real;
	declare k: integer;
	get_value(y);
	get_value(x);
	declare A,B: array[4..10] of integer;
	get_value(B);
	declare D,C: array[10..30] of integer;
	A:=B;
	C:=a;
	D:=C;					 
	for (k in 15..40)
	start
		x:=x+k*y;				    **ERROR: Type mismatch error**
		declare u, v:real;
		u := y+c*34.2;
		v:= u-c*p-20.5E+2;		 
		switch(k)
		start
			case 10: declare A:real;
				 declare Q: integer;
				 declare B: array[10..30] of integer;
				 declare E: array[4..10] of integer;
				 B[9]:= k*20; 	              **ERROR: element of array B is out of bound**         	
				 B:=C;           	      **not an error**
				 E:= Q;                       **ERROR: variables E and Q are of different types	**	 
				 break;
			case 20: A:= 12.90 + u*y - c;         
				 get_value(Q);
				 declare F: array[h1..h2] of boolean;
				 E[7]:= k+12 - Q*10+u;        **ERROR: Type mismatch error**    
				 break;
			default: E[9]:= B[15]+Q;	      **not an error**	       
				 break;			 	
		end
		x:=x + u*v- u<=v;                             **ERROR: Type mismatch error**
	end
	x:=c+y;	
	C[18]:= a[18]+ b[18];
	A[5]:= B[6]- 10;
	declare G:array[k1..k2] of real;
	m:= A[5]< C[18] + A[11];			      **ERROR: element of array A is out of bound** 
	n:= 20*8-5;	
end
